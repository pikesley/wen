<h2>colours</h2>
<div id='circles'>
  <% ['minutes', 'hours'].each do |wheel| %>
    <div class='row'>
      <% ['hands', 'face'].each do |layer| %>
        <div class='wrapper'>
          <div id='<%= wheel %>-<%= layer %>-circle' class='col-xs-6 member'></div>
          <div class='selecter' id='<%= wheel %>-<%= layer %>-selecter'>
            <input type='text'
                   id="<%= wheel %>-<%= layer %>"
                   class='colour-picker'
                   value='rgb(0, 0, 0)'/>
          </div>
        </div>
      <% end %>
    </div>
  <% end %>
</div>

<script>
refresh()

$('#circles .member').each(function(){
  var minStroke = '#666'
  var hourStroke = '#666'

  if(this.id.includes('minutes-face')) {
    minStroke = '#fff'
  }

  if(this.id.includes('hours-face')) {
    hourStroke = '#fff'
  }

  var draw = SVG(this.id).size('100%', 200)
  var minutesWheel = draw.circle(150)
  minutesWheel.move(10, 10)
  minutesWheel.opacity(0.4)
  minutesWheel.stroke({color: minStroke, width: 10})
  if(this.id.includes('minutes-face')) {
    minutesWheel.attr('class', 'minutes-face-disc')
  }
  var hoursWheel = draw.circle(100)
  hoursWheel.move(35, 35)
  hoursWheel.opacity(0.4)
  hoursWheel.stroke({color: hourStroke, width: 10})
  if(this.id.includes('hours-face')) {
    hoursWheel.attr('class', 'hours-face-disc')
  }

  if(this.id.includes('minutes-hands')) {
    var blob = draw.nested()
    blob.circle(20)
    blob.fill('#fff')
    blob.opacity(0.6)
    blob.move(22, 22)
    blob.attr('class', 'minutes-hands-blob')

    var bloc = draw.nested()
    bloc.circle(20)
    bloc.fill('#fff')
    bloc.opacity(0.6)
    bloc.move(42, 8)
    bloc.attr('class', 'minutes-hands-blob')

    var blod = draw.nested()
    blod.circle(20)
    blod.fill('#fff')
    blod.opacity(0.6)
    blod.move(8, 42)
    blod.attr('class', 'minutes-hands-blob')
  }

  if(this.id.includes('hours-hands')) {
    var blob = draw.nested()
    blob.circle(20)
    blob.fill('#fff')
    blob.opacity(0.6)
    blob.move(110, 40)
    blob.attr('class', 'hours-hands-blob')
  }
})

var colours = [
  <% Wen::Config.instance.config.colours.each do |name, rgb| %>
    'rgb(<%= rgb.join(', ') %>);',
  <% end %>
]

function refresh() {
$('#circles :input').each(function() {
  var s = this.id.split('-')
  $.getJSON('/colours/' + s[0] + '/' + s[1], function (data) {
    $('.' + s[0] + '-' + s[1] + '-blob').attr('fill', 'rgb(' + (data['colour'].join(', ')) + ')')
    $('.' + s[0] + '-' + s[1] + '-disc').attr('stroke', 'rgb(' + (data['colour'].join(', ')) + ')')
    $('#' + s[0] + '-' + s[1]).spectrum({
      color: 'rgb(' + (data['colour'].join(', ')) + ')',
      showPalette: true,
      palette: [
        colours
      ],
      showPaletteOnly: true,
      togglePaletteOnly: true,
      togglePaletteMoreText: 'more',
      togglePaletteLessText: 'less',
      hideAfterPaletteSelect:true,
      showInitial: true,
      preferredFormat: "rgb"
    })
  })
})
}
$(".colour-picker").on('move.spectrum', function (ev, tc) {
  d = ev.target.id.split('-')
  x = {}
  x[d[1]] = [tc['_r'], tc['_g'], tc['_b']]
  y = {}
  y[d[0]] = x

  $.ajax({
    url: '/colours/',
    data: JSON.stringify(y),
    type: 'PATCH',
    contentType: 'application/json'
  })

  refresh()
})
</script>
